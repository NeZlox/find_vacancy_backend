version: '3.8'
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "16740:80"
    depends_on:
      - vacancy_frontend
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
    restart: always



  db:
    image: postgres:16
    restart: always
    container_name: vacancy_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "15360:5432"
    volumes:
      - "db_data:/var/lib/postgresql/data"

  redis:
    image: redis:7
    restart: always
    container_name: vacancy_redis
    #ports:
    #  - "6379:6379"
    volumes:
      - "redis_data:/data"

  vacancy_backend:
    image: vacancy_backend:latest
    restart: always
    container_name: vacancy_backend
    depends_on:
      - db
      - redis
    working_dir: /calendar
    command: sh -c "sleep 10 && alembic upgrade head && gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    #ports:
    #  - "15560:8000"

  vacancy_frontend:
    image: vacancy_frontend:latest
    restart: always
    container_name: vacancy_frontend
    depends_on:
      - db
      - redis
      - vacancy_backend


  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: vacancy_celery:latest
    restart: always
    container_name: vacancy_celery_worker
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: celery -A src.tasks.celery_app:celery worker --loglevel=${LOG_LEVEL} --concurrency=4 --pool=threads
    volumes:
      - .:/app

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    image: vacancy_flower:latest
    restart: always
    container_name: vacancy_flower
    env_file:
      - .env
    depends_on:
      - redis
    command: celery -A src.tasks.tasks:celery flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

