version: '3.8'
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "16740:80"
    depends_on:
      #- vacancy_frontend
      - flower
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
    restart: always



  db:
    image: postgres:16
    restart: always
    container_name: vacancy_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "15360:5432"
    volumes:
      - "db_data:/var/lib/postgresql/data"

  redis:
    image: redis:7
    restart: always
    container_name: vacancy_redis
    #ports:
    #  - "6379:6379"
    volumes:
      - "redis_data:/data"

  vacancy_backend:
    image: vacancy_backend:latest
    restart: always
    container_name: vacancy_backend
    depends_on:
      - db
      - redis
    working_dir: /vacancy
    command: sh -c "sleep 10 && alembic upgrade head && gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    #ports:
    #  - "15560:8000"





  celery_worker:
    build:
      context: .
    image: vacancy_backend:latest
    restart: always
    container_name: celery_worker
    depends_on:
      - vacancy_backend
    volumes:
      - .:/vacancy
    #command: ["celery", "-A", "src.tasks.celery_app:celery", "worker", "--loglevel=INFO", "--pool=solo"]
    command: ["celery", "-A", "src.tasks.celery_app:celery", "worker", "--loglevel=INFO", "--pool=threads", "--concurrency=4"]
    #command: ["celery", "-A", "src.tasks.celery_app:celery", "worker", "--loglevel=INFO", "--pool=threads", "--concurrency=4", "-n", "worker1@%h"]
    #command: ["celery", "-A", "src.tasks.celery_app:celery", "worker", "--loglevel=INFO", "--pool=threads", "--concurrency=4", "-n", "worker2@%h"]
    #command: ["sh", "-c", "celery -A src.tasks.celery_app:celery worker --loglevel=INFO --pool=threads --concurrency=4 -n worker1@%h & celery -A src.tasks.celery_app:celery worker --loglevel=INFO --pool=threads --concurrency=4 -n worker2@%h & wait -n"]

  flower:
    build:
      context: .
    image: vacancy_backend:latest
    restart: always
    container_name: flower
    depends_on:
      - celery_worker
    volumes:
      - .:/vacancy
    command: ["celery", "-A", "src.tasks.tasks:celery", "flower",  "--url_prefix=/flower"]



volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

